apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: dualite
  labels:
    app: rabbitmq
spec:
  serviceName: "rabbitmq"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.11-management-alpine
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: dualite-secrets
              key: RABBITMQ_USERNAME
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: dualite-secrets
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: dualite-secrets
              key: RABBITMQ_ERLANG_COOKIE
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 30
          periodSeconds: 15
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: dualite
  labels:
    app: rabbitmq
spec:
  ports:
  - port: 5672
    targetPort: 5672
    name: amqp
  - port: 15672
    targetPort: 15672
    name: management
  selector:
    app: rabbitmq
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: dualite
data:
  rabbitmq.conf: |
    default_user = dualite_user
    default_pass = REPLACE_WITH_SECRET
    default_vhost = /
    disk_free_limit.absolute = 500MB
    management.load_definitions = /etc/rabbitmq/definitions.json
  definitions.json: |
    {
      "rabbit_version": "3.11.2",
      "rabbitmq_version": "3.11.2",
      "vhosts": [
        {
          "name": "/"
        }
      ],
      "exchanges": [
        {
          "name": "dualite.topic",
          "vhost": "/",
          "type": "topic",
          "durable": true,
          "auto_delete": false,
          "internal": false,
          "arguments": {}
        }
      ],
      "queues": [
        {
          "name": "email_processing",
          "vhost": "/",
          "durable": true,
          "auto_delete": false,
          "arguments": {}
        },
        {
          "name": "invoice_processing",
          "vhost": "/",
          "durable": true,
          "auto_delete": false,
          "arguments": {}
        }
      ],
      "bindings": [
        {
          "source": "dualite.topic",
          "vhost": "/",
          "destination": "email_processing",
          "destination_type": "queue",
          "routing_key": "email.processing",
          "arguments": {}
        },
        {
          "source": "dualite.topic",
          "vhost": "/",
          "destination": "invoice_processing",
          "destination_type": "queue",
          "routing_key": "invoice.processing",
          "arguments": {}
        }
      ],
      "permissions": [
        {
          "user": "dualite_user",
          "vhost": "/",
          "configure": ".*",
          "write": ".*",
          "read": ".*"
        }
      ]
    }
